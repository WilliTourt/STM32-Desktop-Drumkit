/**
 * @file oled.h
 * @brief OLED display driver library for STM32 MCUs
 * 
 * Provides control functions for I2C-based OLED displays, supporting:
 * - Text display
 * - Graphics drawing (Dots)
 * - Variable display
 * - Screen control
 * 
 * @author WilliTourt, willitourt@foxmail.com
 * @copyright Copyright (c) 2025 by WilliTourt
 * 
 * @note Comments are mostly written by AI
 */

#pragma once

#include "i2c.h"
#include <stdint.h>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>

/**
 * @brief OLED display I2C device address (7-bit format)
 */
#define OLED_ADDR 0x78

/**
 * @class OLED
 * @brief OLED display control class
 * 
 * Provides basic control functions for OLED displays including:
 * - Text display
 * - Graphics drawing (Dots)
 * - Variable display
 * - Screen control
 */
class OLED {
    public:
        /**
         * @brief Constructor
         * @param hi2c Pointer to I2C handle
         * @param height OLED display height in pixel rows
         */
        OLED(I2C_HandleTypeDef* hi2c, uint8_t height);
        
        /**
         * @brief Initialize OLED display
         * @return true if initialization succeeded
         */
        bool begin();
        
        /**
         * @brief Clear entire display
         */
        void clear();
        
        /**
         * @brief Clear specified display area
         * @param x1 Start column (0-127)
         * @param page1 Start page (0-7)
         * @param x2 End column (0-127)
         * @param page2 End page (0-7)
         */
        void clearPart(uint8_t x1, uint8_t page1, uint8_t x2, uint8_t page2);
        
        /**
         * @brief Set display position
         * @param x Column position (0-127)
         * @param y Row position (0-height-1)
         */
        void setCursor(uint8_t x, uint8_t y);
        
        /**
         * @brief Update display buffer to OLED
         */
        void updateBufferArea();

        /**
         * @brief Set single pixel state
         * @param x Column position (0-127)
         * @param y Row position (0-height-1)
         * @param state Pixel state (true: on, false: off)
         */
        void setPixel(uint8_t x, uint8_t y, bool state);
        
        /**
         * @brief Display text string
         * @param x Start column (0-127)
         * @param y Start row (0-3/7)
         * @param str String to display
         * @param size Font size (1:6x8, 2:8x16)
         */
        void printText(uint8_t x, uint8_t y, const char* str, uint8_t size);
        
        /**
         * @brief Display image
         * @param x Start column (0-127)
         * @param y Start row (0-3/7)
         * @param width Image width
         * @param height Image height
         * @param image Pointer to image data
         */
        void printImage(uint8_t x, uint8_t y, uint8_t width, uint8_t height, const uint8_t* image);
        
        /**
         * @brief Display variable value
         * @param x Start column (0-127)
         * @param y Start row (0-3/7)
         * @param num Number to display
         * @param type Display type ("int","float","hex" etc.)
         * @param length Display length
         * @param zeroPad Whether to zero-pad
         */
        void printVar(uint8_t x, uint8_t y, float num, const char* type, uint8_t length, bool zeroPad);
        
        /**
         * @brief Draw horizontal line
         * @param x Start column (0-127)
         * @param y Row position (0-3/7)
         * @param width Line length
         */
        void printHLine(uint8_t x, uint8_t y, uint8_t width);
        // void printVLine(uint8_t x, uint8_t y, uint8_t height);

        /**
         * @brief Set low brightness mode
         * @param enable Whether to enable low brightness
         */
        void lowBrightness(bool enable);
        
        /**
         * @brief Control OLED power
         * @param state true: power on, false: power off
         */
        void power(bool state);

        const uint8_t ST[160] {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 
0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xf8, 0xff, 
0xff, 0x07, 0x03, 0x01, 0x70, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0x78, 0x18, 0x00, 0x80, 0xf0, 0xf8, 0xf8, 0xf8, 
0xf8, 0xf8, 0x78, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xfc, 0xf8, 0xf0, 0xe1, 0xc3, 
0x07, 0x0f, 0x1f, 0xff, 0xff, 0xff, 0x1f, 0x03, 0x80, 0xf0, 0xfe, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x0f, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x02, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x01, 0x11, 0x10, 0x18, 0x1c, 0x1f, 0x1f, 0x07, 0x00, 0x00, 0x1c, 
0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x0f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};
    private:
        /**
         * @brief Send command to OLED
         * @param command Command byte
         * @return true if command sent successfully
         */
        bool _wCmd(uint8_t command);
        
        /**
         * @brief Send data to OLED
         * @param data Data byte
         */
        void _wData(uint8_t data);
        
        /**
         * @brief Compare two strings
         * @param str1 First string
         * @param str2 Second string
         * @return Comparison result
         */
        uint8_t _cmpStrs(const char* str1, const char* str2);

        I2C_HandleTypeDef* _hi2c;               // I2C hardware interface handle
        uint8_t _height;                        // OLED display height in pixel rows
        uint8_t displayBuffer[8][128] = {0};    // Display buffer


        // Below are font data arrays
        const uint8_t _font6x8[95][6] = {

            { 0x00,0x00,0x00,0x00,0x00,0x00},//   0
            { 0x00,0x00,0x00,0x2F,0x00,0x00},// ! 1
            { 0x00,0x00,0x07,0x00,0x07,0x00},// " 2
            { 0x00,0x14,0x7F,0x14,0x7F,0x14},// # 3
            { 0x00,0x24,0x2A,0x7F,0x2A,0x12},// $ 4
            { 0x00,0x23,0x13,0x08,0x64,0x62},// % 5
            { 0x00,0x36,0x49,0x55,0x22,0x50},// & 6
            { 0x00,0x00,0x00,0x07,0x00,0x00},// ' 7
            { 0x00,0x00,0x1C,0x22,0x41,0x00},// ( 8
            { 0x00,0x00,0x41,0x22,0x1C,0x00},// ) 9
            { 0x00,0x14,0x08,0x3E,0x08,0x14},// * 10
            { 0x00,0x08,0x08,0x3E,0x08,0x08},// + 11
            { 0x00,0x00,0x00,0xA0,0x60,0x00},// , 12
            { 0x00,0x08,0x08,0x08,0x08,0x08},// - 13
            { 0x00,0x00,0x60,0x60,0x00,0x00},// . 14
            { 0x00,0x20,0x10,0x08,0x04,0x02},// / 15
            { 0x00,0x3E,0x51,0x49,0x45,0x3E},// 0 16
            { 0x00,0x00,0x42,0x7F,0x40,0x00},// 1 17
            { 0x00,0x42,0x61,0x51,0x49,0x46},// 2 18
            { 0x00,0x21,0x41,0x45,0x4B,0x31},// 3 19
            { 0x00,0x18,0x14,0x12,0x7F,0x10},// 4 20
            { 0x00,0x27,0x45,0x45,0x45,0x39},// 5 21
            { 0x00,0x3C,0x4A,0x49,0x49,0x30},// 6 22
            { 0x00,0x01,0x71,0x09,0x05,0x03},// 7 23
            { 0x00,0x36,0x49,0x49,0x49,0x36},// 8 24
            { 0x00,0x06,0x49,0x49,0x29,0x1E},// 9 25
            { 0x00,0x00,0x36,0x36,0x00,0x00},// : 26
            { 0x00,0x00,0x56,0x36,0x00,0x00},// ; 27
            { 0x00,0x08,0x14,0x22,0x41,0x00},// < 28
            { 0x00,0x14,0x14,0x14,0x14,0x14},// = 29
            { 0x00,0x00,0x41,0x22,0x14,0x08},// > 30
            { 0x00,0x02,0x01,0x51,0x09,0x06},// ? 31
            { 0x00,0x3E,0x49,0x55,0x59,0x2E},// @ 32
            { 0x00,0x7C,0x12,0x11,0x12,0x7C},// A 33
            { 0x00,0x7F,0x49,0x49,0x49,0x36},// B 34
            { 0x00,0x3E,0x41,0x41,0x41,0x22},// C 35
            { 0x00,0x7F,0x41,0x41,0x22,0x1C},// D 36
            { 0x00,0x7F,0x49,0x49,0x49,0x41},// E 37
            { 0x00,0x7F,0x09,0x09,0x09,0x01},// F 38
            { 0x00,0x3E,0x41,0x49,0x49,0x7A},// G 39
            { 0x00,0x7F,0x08,0x08,0x08,0x7F},// H 40
            { 0x00,0x00,0x41,0x7F,0x41,0x00},// I 41
            { 0x00,0x20,0x40,0x41,0x3F,0x01},// J 42
            { 0x00,0x7F,0x08,0x14,0x22,0x41},// K 43
            { 0x00,0x7F,0x40,0x40,0x40,0x40},// L 44
            { 0x00,0x7F,0x02,0x0C,0x02,0x7F},// M 45
            { 0x00,0x7F,0x04,0x08,0x10,0x7F},// N 46
            { 0x00,0x3E,0x41,0x41,0x41,0x3E},// O 47
            { 0x00,0x7F,0x09,0x09,0x09,0x06},// P 48
            { 0x00,0x3E,0x41,0x51,0x21,0x5E},// Q 49
            { 0x00,0x7F,0x09,0x19,0x29,0x46},// R 50
            { 0x00,0x46,0x49,0x49,0x49,0x31},// S 51
            { 0x00,0x01,0x01,0x7F,0x01,0x01},// T 52
            { 0x00,0x3F,0x40,0x40,0x40,0x3F},// U 53
            { 0x00,0x1F,0x20,0x40,0x20,0x1F},// V 54
            { 0x00,0x3F,0x40,0x38,0x40,0x3F},// W 55
            { 0x00,0x63,0x14,0x08,0x14,0x63},// X 56
            { 0x00,0x07,0x08,0x70,0x08,0x07},// Y 57
            { 0x00,0x61,0x51,0x49,0x45,0x43},// Z 58
            { 0x00,0x00,0x7F,0x41,0x41,0x00},// [ 59
            { 0x00,0x02,0x04,0x08,0x10,0x20},// \ 60
            { 0x00,0x00,0x41,0x41,0x7F,0x00},// ] 61
            { 0x00,0x04,0x02,0x01,0x02,0x04},// ^ 62
            { 0x00,0x40,0x40,0x40,0x40,0x40},// _ 63
            { 0x00,0x00,0x01,0x02,0x04,0x00},// ` 64
            { 0x00,0x20,0x54,0x54,0x54,0x78},// a 65
            { 0x00,0x7F,0x48,0x44,0x44,0x38},// b 66
            { 0x00,0x38,0x44,0x44,0x44,0x20},// c 67
            { 0x00,0x38,0x44,0x44,0x48,0x7F},// d 68
            { 0x00,0x38,0x54,0x54,0x54,0x18},// e 69
            { 0x00,0x08,0x7E,0x09,0x01,0x02},// f 70
            { 0x00,0x18,0xA4,0xA4,0xA4,0x7C},// g 71
            { 0x00,0x7F,0x08,0x04,0x04,0x78},// h 72
            { 0x00,0x00,0x44,0x7D,0x40,0x00},// i 73
            { 0x00,0x40,0x80,0x84,0x7D,0x00},// j 74
            { 0x00,0x7F,0x10,0x28,0x44,0x00},// k 75
            { 0x00,0x00,0x41,0x7F,0x40,0x00},// l 76
            { 0x00,0x7C,0x04,0x18,0x04,0x78},// m 77
            { 0x00,0x7C,0x08,0x04,0x04,0x78},// n 78
            { 0x00,0x38,0x44,0x44,0x44,0x38},// o 79
            { 0x00,0xFC,0x24,0x24,0x24,0x18},// p 80
            { 0x00,0x18,0x24,0x24,0x18,0xFC},// q 81
            { 0x00,0x7C,0x08,0x04,0x04,0x08},// r 82
            { 0x00,0x48,0x54,0x54,0x54,0x20},// s 83
            { 0x00,0x04,0x3F,0x44,0x40,0x20},// t 84
            { 0x00,0x3C,0x40,0x40,0x20,0x7C},// u 85
            { 0x00,0x1C,0x20,0x40,0x20,0x1C},// v 86
            { 0x00,0x3C,0x40,0x30,0x40,0x3C},// w 87
            { 0x00,0x44,0x28,0x10,0x28,0x44},// x 88
            { 0x00,0x1C,0xA0,0xA0,0xA0,0x7C},// y 89
            { 0x00,0x44,0x64,0x54,0x4C,0x44},// z 90
            { 0x00,0x00,0x08,0x7F,0x41,0x00},// { 91
            { 0x00,0x00,0x00,0x7F,0x00,0x00},// | 92
            { 0x00,0x00,0x41,0x7F,0x08,0x00},// } 93
            { 0x00,0x08,0x04,0x08,0x10,0x08} // ~ 94

        };

        const uint8_t _font8x16[95][16] = {

            {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},/*" ",0*/
            {0x00,0x00,0x00,0xF8,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x11,0x1B,0x00,0x00,0x00},/*"!",1*/
            {0x00,0x00,0x78,0x08,0x00,0x78,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},/*""",2*/
            {0x00,0x40,0xE0,0x50,0x40,0xF0,0x50,0x40,0x00,0x04,0x1F,0x04,0x04,0x1F,0x04,0x00},/*"#",3*/
            {0x00,0xE0,0xB0,0x10,0xF8,0x10,0x10,0x00,0x00,0x10,0x10,0x7F,0x11,0x13,0x0E,0x00},/*"$",4*/
            {0x30,0x58,0x48,0x70,0x80,0x60,0x30,0x08,0x10,0x18,0x04,0x03,0x0C,0x12,0x12,0x0C},/*"%",5*/
            {0x00,0x60,0xF0,0x90,0x90,0x70,0x00,0x00,0x04,0x1F,0x11,0x11,0x16,0x1C,0x1F,0x10},/*"&",6*/
            {0x00,0x00,0x00,0x78,0x78,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},/*"'",7*/
            {0x00,0x00,0x80,0xE0,0x30,0x08,0x00,0x00,0x00,0x00,0x07,0x3F,0x60,0xC0,0x00,0x00},/*"(",8*/
            {0x00,0x00,0x08,0x10,0xE0,0x80,0x00,0x00,0x00,0x00,0x80,0x60,0x38,0x0F,0x00,0x00},/*")",9*/
            {0x00,0x80,0xA0,0x60,0xD8,0x60,0x90,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00},/*"*",10*/
            {0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x02,0x02,0x1F,0x1F,0x02,0x02,0x02},/*"+",11*/
            {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x58,0x38,0x00,0x00,0x00},/*",",12*/
            {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x02,0x02,0x02,0x00,0x00},/*"-",13*/
            {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00},/*".",14*/
            {0x00,0x00,0x00,0x00,0xC0,0x70,0x18,0x00,0x00,0x20,0x18,0x06,0x01,0x00,0x00,0x00},/*"/",15*/
            {0x00,0xE0,0x30,0x10,0x10,0xB0,0xE0,0x80,0x00,0x0F,0x1A,0x13,0x11,0x18,0x0F,0x03},/*"0",16*/
            {0x00,0x60,0x20,0x30,0xF0,0x00,0x00,0x00,0x00,0x10,0x10,0x10,0x1F,0x10,0x10,0x00},/*"1",17*/
            {0x00,0x20,0x10,0x10,0x10,0xF0,0xE0,0x00,0x00,0x10,0x18,0x14,0x12,0x11,0x10,0x00},/*"2",18*/
            {0x00,0x10,0x10,0x10,0x10,0xF0,0x60,0x00,0x00,0x10,0x11,0x11,0x11,0x19,0x0E,0x00},/*"3",19*/
            {0x00,0x00,0x80,0x60,0x30,0xF0,0x00,0x00,0x04,0x07,0x05,0x04,0x04,0x1F,0x04,0x04},/*"4",20*/
            {0x00,0xF0,0xF0,0x10,0x10,0x10,0x10,0x00,0x00,0x11,0x11,0x11,0x11,0x19,0x0F,0x00},/*"5",21*/
            {0x00,0xC0,0x60,0x30,0x90,0x10,0x10,0x00,0x00,0x0F,0x19,0x11,0x10,0x11,0x0F,0x00},/*"6",22*/
            {0x00,0x10,0x10,0x10,0x10,0xD0,0x70,0x00,0x00,0x00,0x10,0x1C,0x07,0x01,0x00,0x00},/*"7",23*/
            {0x00,0x60,0xB0,0x90,0x10,0x90,0xE0,0x00,0x00,0x0E,0x12,0x11,0x11,0x13,0x0E,0x00},/*"8",24*/
            {0x00,0xE0,0x30,0x10,0x10,0x30,0xE0,0x00,0x00,0x11,0x11,0x12,0x12,0x09,0x07,0x00},/*"9",25*/
            {0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00},/*":",26*/
            {0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x40,0x58,0x38,0x00,0x00,0x00},/*";",27*/
            {0x00,0x00,0x00,0x80,0x80,0x40,0x00,0x00,0x00,0x02,0x03,0x05,0x08,0x18,0x10,0x00},/*"<",28*/
            {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x05,0x05,0x05,0x05,0x05,0x05,0x00},/*"=",29*/
            {0x00,0x00,0x40,0xC0,0x80,0x00,0x00,0x00,0x00,0x00,0x10,0x08,0x04,0x07,0x02,0x00},/*">",30*/
            {0x00,0x00,0x08,0x18,0x10,0xF0,0xE0,0x00,0x00,0x00,0x00,0x1B,0x01,0x00,0x00,0x00},/*"?",31*/
            {0x80,0xE0,0x10,0x88,0x88,0x88,0x10,0xE0,0x3F,0x60,0x8F,0x91,0x88,0x9F,0x08,0x0F},/*"@",32*/
            {0x00,0x00,0xC0,0x70,0x30,0xE0,0x00,0x00,0x10,0x1E,0x07,0x04,0x04,0x05,0x0F,0x18},/*"A",33*/
            {0x00,0xF0,0x10,0x10,0x10,0xB0,0xE0,0x00,0x00,0x1F,0x11,0x11,0x11,0x11,0x0E,0x00},/*"B",34*/
            {0x00,0xC0,0x20,0x10,0x10,0x10,0x10,0x00,0x00,0x0F,0x18,0x10,0x10,0x10,0x10,0x00},/*"C",35*/
            {0x00,0xF0,0x10,0x10,0x10,0x30,0xE0,0x80,0x00,0x1F,0x10,0x10,0x10,0x08,0x0F,0x03},/*"D",36*/
            {0x00,0xF0,0xF0,0x10,0x10,0x10,0x10,0x00,0x00,0x1F,0x1F,0x11,0x11,0x11,0x11,0x00},/*"E",37*/
            {0x00,0xF0,0xF0,0x10,0x10,0x10,0x10,0x00,0x00,0x1F,0x1F,0x01,0x01,0x01,0x01,0x00},/*"F",38*/
            {0x00,0xE0,0x20,0x10,0x10,0x10,0x10,0x00,0x01,0x0F,0x18,0x10,0x11,0x11,0x1F,0x00},/*"G",39*/
            {0x00,0xF0,0x00,0x00,0x00,0x00,0xF0,0x00,0x00,0x1F,0x01,0x01,0x01,0x01,0x1F,0x00},/*"H",40*/
            {0x00,0x10,0x10,0xF0,0xF0,0x10,0x10,0x00,0x00,0x10,0x10,0x1F,0x1F,0x10,0x10,0x00},/*"I",41*/
            {0x00,0x10,0x10,0x10,0x10,0xF0,0x00,0x00,0x00,0x18,0x10,0x10,0x10,0x0F,0x00,0x00},/*"J",42*/
            {0x00,0xF0,0x00,0x80,0x40,0x20,0x10,0x00,0x00,0x1F,0x01,0x03,0x06,0x0C,0x10,0x00},/*"K",43*/
            {0x00,0x00,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x10,0x10,0x10,0x10,0x00},/*"L",44*/
            {0x00,0xF0,0x70,0x80,0x80,0xE0,0xF0,0xC0,0x1C,0x1F,0x00,0x03,0x03,0x00,0x03,0x1F},/*"M",45*/
            {0x00,0xF0,0x70,0xC0,0x00,0x00,0xF0,0x00,0x00,0x1F,0x00,0x01,0x07,0x1C,0x1F,0x00},/*"N",46*/
            {0x80,0xE0,0x30,0x10,0x10,0x10,0xE0,0xC0,0x03,0x0F,0x18,0x10,0x10,0x10,0x0F,0x07},/*"O",47*/
            {0x00,0xF0,0x10,0x10,0x10,0x30,0xE0,0x00,0x00,0x1F,0x02,0x02,0x02,0x01,0x01,0x00},/*"P",48*/
            {0x80,0xE0,0x30,0x10,0x10,0x10,0xE0,0xC0,0x03,0x0F,0x18,0x30,0x70,0x50,0x4F,0x47},/*"Q",49*/
            {0x00,0xF0,0xF0,0x10,0x10,0xB0,0xE0,0x00,0x00,0x1F,0x1F,0x01,0x03,0x0F,0x18,0x00},/*"R",50*/
            {0x00,0xE0,0xB0,0x10,0x10,0x10,0x10,0x00,0x00,0x10,0x10,0x11,0x11,0x13,0x0E,0x00},/*"S",51*/
            {0x00,0x10,0x10,0xF0,0xF0,0x10,0x10,0x10,0x00,0x00,0x00,0x1F,0x1F,0x00,0x00,0x00},/*"T",52*/
            {0x00,0xF0,0x00,0x00,0x00,0x00,0xF0,0x00,0x00,0x0F,0x18,0x10,0x10,0x10,0x0F,0x00},/*"U",53*/
            {0x10,0xF0,0x80,0x00,0x00,0x00,0xE0,0x30,0x00,0x00,0x07,0x1C,0x18,0x0F,0x01,0x00},/*"V",54*/
            {0x30,0xF0,0x00,0x00,0x80,0x00,0x00,0xF0,0x00,0x1F,0x1C,0x07,0x03,0x1C,0x1F,0x03},/*"W",55*/
            {0x00,0x30,0x60,0xC0,0x80,0x60,0x30,0x10,0x10,0x18,0x0C,0x03,0x03,0x0E,0x18,0x10},/*"X",56*/
            {0x10,0x70,0xC0,0x80,0x00,0xC0,0x60,0x10,0x00,0x00,0x00,0x1F,0x1F,0x01,0x00,0x00},/*"Y",57*/
            {0x00,0x10,0x10,0x10,0x90,0xD0,0x30,0x00,0x00,0x18,0x1C,0x13,0x11,0x10,0x10,0x00},/*"Z",58*/
            {0x00,0x00,0x00,0xF8,0x08,0x08,0x00,0x00,0x00,0x00,0x00,0xFF,0x80,0x80,0x00,0x00},/*"[",59*/
            {0x00,0x08,0x30,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x1C,0x30,0x00},/*"\",60*/
            {0x00,0x00,0x08,0x08,0xF8,0xF8,0x00,0x00,0x00,0x00,0x80,0x80,0xFF,0xFF,0x00,0x00},/*"]",61*/
            {0x00,0x80,0xC0,0x30,0x30,0x60,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},/*"^",62*/
            {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80},/*"_",63*/
            {0x00,0x00,0x08,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},/*"`",64*/
            {0x00,0x00,0x40,0x40,0x40,0xC0,0x80,0x00,0x00,0x1C,0x12,0x12,0x12,0x0A,0x1F,0x00},/*"a",65*/
            {0x00,0xF8,0x80,0x40,0x40,0x40,0x80,0x00,0x00,0x1F,0x10,0x10,0x10,0x10,0x0F,0x00},/*"b",66*/
            {0x00,0x00,0x80,0x40,0x40,0x40,0x40,0x00,0x00,0x07,0x1D,0x10,0x10,0x10,0x10,0x00},/*"c",67*/
            {0x00,0x80,0xC0,0x40,0x40,0x40,0xF8,0x00,0x00,0x0F,0x18,0x10,0x10,0x08,0x1F,0x00},/*"d",68*/
            {0x00,0x80,0xC0,0x40,0x40,0x40,0x80,0x00,0x00,0x0F,0x1A,0x12,0x12,0x12,0x13,0x00},/*"e",69*/
            {0x00,0x80,0x80,0xF0,0x98,0x88,0x88,0x08,0x00,0x00,0x00,0x1F,0x00,0x00,0x00,0x00},/*"f",70*/
            {0x00,0x80,0xC0,0x40,0x40,0xC0,0xC0,0x40,0x00,0x6F,0x92,0x94,0x94,0x92,0x73,0x20},/*"g",71*/
            {0x00,0xF8,0x80,0x40,0x40,0x40,0x80,0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x1F,0x00},/*"h",72*/
            {0x00,0x40,0x40,0x58,0xD8,0x00,0x00,0x00,0x00,0x10,0x10,0x10,0x1F,0x10,0x10,0x00},/*"i",73*/
            {0x00,0x40,0x40,0x40,0x50,0xD8,0x00,0x00,0x00,0x80,0x80,0x80,0xC0,0x7F,0x00,0x00},/*"j",74*/
            {0x00,0xF8,0xF8,0x00,0x80,0x80,0x40,0x00,0x00,0x1F,0x1F,0x03,0x05,0x08,0x10,0x00},/*"k",75*/
            {0x00,0x08,0x08,0x08,0xF8,0x00,0x00,0x00,0x00,0x10,0x10,0x10,0x1F,0x10,0x10,0x00},/*"l",76*/
            {0x00,0xC0,0x40,0x40,0x80,0x40,0xC0,0x80,0x00,0x1F,0x00,0x00,0x1F,0x00,0x1F,0x1F},/*"m",77*/
            {0x00,0xC0,0x80,0x40,0x40,0x40,0x80,0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x1F,0x00},/*"n",78*/
            {0x00,0x80,0xC0,0x40,0x40,0x40,0x80,0x00,0x00,0x0F,0x18,0x10,0x10,0x10,0x0F,0x02},/*"o",79*/
            {0x00,0xC0,0x80,0x40,0x40,0x40,0x80,0x00,0x00,0xFF,0x10,0x10,0x10,0x10,0x0F,0x00},/*"p",80*/
            {0x00,0x80,0xC0,0x40,0x40,0x40,0xC0,0x00,0x00,0x0F,0x18,0x10,0x10,0x08,0xFF,0x00},/*"q",81*/
            {0x00,0xC0,0xC0,0x80,0x40,0x40,0xC0,0x00,0x00,0x1F,0x1F,0x00,0x00,0x00,0x01,0x01},/*"r",82*/
            {0x00,0x00,0xC0,0x40,0x40,0x40,0x40,0x00,0x00,0x10,0x13,0x12,0x12,0x16,0x0C,0x00},/*"s",83*/
            {0x40,0x40,0x40,0xF0,0x40,0x40,0x40,0x00,0x00,0x00,0x00,0x1F,0x10,0x10,0x10,0x00},/*"t",84*/
            {0x00,0xC0,0x00,0x00,0x00,0x00,0xC0,0x00,0x00,0x0F,0x18,0x10,0x10,0x08,0x1F,0x00},/*"u",85*/
            {0x00,0xC0,0x00,0x00,0x00,0x00,0xC0,0x40,0x00,0x01,0x07,0x1C,0x18,0x07,0x01,0x00},/*"v",86*/
            {0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0xC0,0x00,0x1F,0x18,0x07,0x07,0x1C,0x1F,0x01},/*"w",87*/
            {0x00,0x40,0xC0,0x00,0x00,0x80,0xC0,0x00,0x00,0x10,0x18,0x07,0x07,0x0D,0x18,0x00},/*"x",88*/
            {0x00,0xC0,0x00,0x00,0x00,0x00,0xC0,0x40,0x80,0x81,0xC7,0x7C,0x38,0x0F,0x01,0x00},/*"y",89*/
            {0x00,0x40,0x40,0x40,0x40,0xC0,0xC0,0x00,0x00,0x10,0x18,0x16,0x13,0x11,0x10,0x00},/*"z",90*/
            {0x00,0x00,0x00,0xF0,0x18,0x08,0x08,0x00,0x00,0x02,0x03,0x7F,0xC0,0x80,0x80,0x00},/*"{",91*/
            {0x00,0x00,0x00,0x00,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00},/*"|",92*/
            {0x00,0x00,0x08,0x18,0xF0,0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0x7F,0x03,0x02,0x00},/*"}",93*/
            {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x01,0x01,0x02,0x04,0x06,0x03}/*"~",94*/

        };
};
